#!/bin/bash
HUMBLE_INSTALL_DIR=~/ros2_humble/
DEB_VERSION=$(env -i bash -c '. /etc/os-release; echo $VERSION_CODENAME')
PACKAGE_NAME=darwin-legacy
INSTALL_DIR=/etc/$PACKAGE_NAME
INCLUDE_DIR=/usr/include/$PACKAGE_NAME
ROS_BUILD_FILE=do_build.sh
ROS_RUN_FILE=run_darwin_lofaro.sh
ROS_CLOCK_RUN_FILE=run_darwin_clock_lofaro.sh

SYSTEM_ACH_DIR=ctrl_ach
SYSTEM_ACH_DIR_WALKING=walking
SYSTEM_ACH_DIR_ON=on
SYSTEM_ACH_DIR_OFF=off
SYSTEM_ACH_DIR_SERVER=ctrl_server
BIN_NAME_ACH_SERVER=darwin-server
BIN_NAME_ACH_ON=darwin-on
BIN_NAME_ACH_OFF=darwin-off
BIN_NAME_ACH_WALKING=darwin-walking

DARWIN_CLOCK_SCREEN_NAME=darwin-lofaro-clock
DARWIN_SCREEN_NAME=darwin-lofaro

DARWIN_ACH_CHAN_REF='darwin-ach-chan-ref'
DARWIN_ACH_CHAN_REF_WALKING='darwin-ach-chan-ref-walking'
DARWIN_ACH_CHAN_STATE='darwin-ach-chan-state'
DARWIN_ACH_CHAN_CMD='darwin-ach-chan-cmd'
DARWIN_ACH_CHAN_CMD_RETURN='darwin-ach-chan-ret'
DARWIN_ACH_CHAN_CMD_VEL='darwin-ach-chan-cmd-vel'

#DARWIN_IP='10.5.0.249'
DARWIN_IP='10.111.111.11'

DarwinAchStatus()
{
  THE_OUT_HUMAN=''
  THE_OUT_ROBOT=''
  case "$2" in
        'server' )
		if ps -p $(pidof $BIN_NAME_ACH_SERVER) > /dev/null 2>&1
		then
			THE_OUT_HUMAN="Darwin Ach Server is Running"
			THE_OUT_ROBOT=1
		else
			THE_OUT_HUMAN="Darwin Ach Servers is not Running"
			THE_OUT_ROBOT=0
		fi
        ;;

        'client' )
		if ps -p $(pidof $BIN_NAME_ACH_CLIENT) > /dev/null 2>&1
		then
			THE_OUT_HUMAN="Darwin Ach Client is Running"
			THE_OUT_ROBOT=1
		else
			THE_OUT_HUMAN="Darwin Ach Client is not Running"
			THE_OUT_ROBOT=0
		fi
        ;;

        'walking' )
		if ps -p $(pidof $BIN_NAME_ACH_WALKING) > /dev/null 2>&1
		then
			THE_OUT_HUMAN="Darwin Ach Walking is Running"
			THE_OUT_ROBOT=1
		else
			THE_OUT_HUMAN="Darwin Ach Walking is not Running"
			THE_OUT_ROBOT=0
		fi
        ;;

        'remote' )
		if ps -p $(pidof achd) > /dev/null 2>&1
		then
			THE_OUT_HUMAN="Darwin Ach Remote is Running"
			THE_OUT_ROBOT=1
		else
			THE_OUT_HUMAN="Darwin Ach Remote is not Running"
			THE_OUT_ROBOT=0
		fi
        ;;


        * )
                ShowUsage
                exit 1
	;;
  esac

  case "$1" in
        '-h' )
		echo $THE_OUT_HUMAN
        ;;
        '-n' )
                echo $THE_OUT_ROBOT
        ;;

        * )
                ShowUsage
                exit 1
	;;
  esac
}


ResetAch()
{
  KillAchChannels
  MakeAch
}

KillAchChannels()
{
  rm /dev/shm/achshm-darwin*
}

KillAch()
{
  sudo kill -9 $(pidof achd)
  KillAchChannels
}

MakeAch()
{
#  ach -1 -C $DARWIN_ACH_CHAN_REF -m 10 -n 3000
#  ach -1 -C $DARWIN_ACH_CHAN_STATE -m 10 -n 3000
#  ach -1 -C $DARWIN_ACH_CHAN_CMD -m 10 -n 3000
#  ach -1 -C $DARWIN_ACH_CHAN_CMD_RETURN -m 10 -n 3000
  ach -1 mk $DARWIN_ACH_CHAN_REF -m 10 -n 3000
  ach -1 mk $DARWIN_ACH_CHAN_REF_WALKING -m 10 -n 3000
  ach -1 mk $DARWIN_ACH_CHAN_STATE -m 10 -n 3000
  ach -1 mk $DARWIN_ACH_CHAN_CMD -m 10 -n 3000
  ach -1 mk $DARWIN_ACH_CHAN_CMD_RETURN -m 10 -n 3000
  ach -1 mk $DARWIN_ACH_CHAN_CMD_VEL -m 10 -n 3000
  chmod 777 /dev/shm/achshm-darwin*
}

AchRemote()
{
  MakeAch
  achd -r push $1 $DARWIN_ACH_CHAN_REF &
  achd -r pull $1 $DARWIN_ACH_CHAN_STATE &
  achd -r push $1 $DARWIN_ACH_CHAN_CMD &
  achd -r pull $1 $DARWIN_ACH_CHAN_CMD_RETURN &
  achd -r pull $1 $DARWIN_ACH_CHAN_CMD_VEL &
}


LowLatency()
{
	setserial /dev/ttyUSB0 low_latency
#	sudo setserial /dev/ttyUSB0 low_latency
	sync
#	sudo sync
	sleep 1
	echo '---- Low Latency Set ----'
}
StatusId()
{
	if ! screen -list | grep -q "$DARWIN_SCREEN_NAME"; then
		echo 1
	else 
		echo 0
	fi
}

Status()
{
	if ! screen -list | grep -q "$DARWIN_SCREEN_NAME"; then
		echo '--- Darwin Lofaro Legacy STOPED ---'
		exit 1
	else 
		echo '--- Darwin Lofaro Legacy RUNNING ---'
		exit 0
	fi
}

Start()
{
  DarwinLegacyRos2Start
  DarwinLegacyClockRos2Start
}

Stop()
{
  DarwinLegacyClockRos2Stop
  DarwinLegacyRos2Stop
}

DarwinLegacyRos2Stop()
{
	echo '--- Stopping Darwin Lofaro Legacy ---'
	screen -S "$DARWIN_SCREEN_NAME" -X quit > /dev/null
	if ! screen -list | grep -q "$DARWIN_SCREEN_NAME"; then
		echo '--- Darwin Lofaro Legacy Stopped ---'
	else 
		echo '--- Darwin Lofaro Legacy Failed to Stop ---'
	fi
}


DarwinLegacyRos2Start()
{
	cd $INSTALL_DIR/ros2
#	if ! screen -list | grep -q $DARWIN_SCREEN_NAME; then
	if ! screen -list | grep -q "$DARWIN_SCREEN_NAME"; then
		echo '--- Starting Darwin Lofaro Legacy ---'
		screen -d -m -S $DARWIN_SCREEN_NAME /bin/bash -c ./$ROS_RUN_FILE
	else 
		echo '--- Darwin Lofaro Legacy already running ---'
	fi
}

DarwinLegacyClockRos2Start()
{
	cd $INSTALL_DIR/ros2
#	if ! screen -list | grep -q $DARWIN_CLOCK_SCREEN_NAME; then
	if ! screen -list | grep -q "$DARWIN_CLOCK_SCREEN_NAME"; then
		echo '--- Starting Darwin Lofaro Legacy Clock ---'
		screen -d -m -S $DARWIN_CLOCK_SCREEN_NAME /bin/bash -c ./$ROS_CLOCK_RUN_FILE
	else 
		echo '--- Darwin Lofaro Legacy Clock already running ---'
	fi
}
DarwinLegacyClockRos2Stop()
{
	echo '--- Stopping Darwin Lofaro Legacy Clock ---'
	screen -S "$DARWIN_CLOCK_SCREEN_NAME" -X quit > /dev/null
	if ! screen -list | grep -q "$DARWIN_CLOCK_SCREEN_NAME"; then
		echo '--- Darwin Lofaro Legacy Clock Stopped ---'
	else 
		echo '--- Darwin Lofaro Legacy Clock Failed to Stop ---'
	fi
}

DarwinLegacy()
{
	THE_DIR=$(pwd)
	sudo rm -rf $INSTALL_DIR
	sudo mkdir -p $INSTALL_DIR
	echo $INSTALL_DIR
        sudo cp -r ../include/ $INSTALL_DIR/
        sudo cp -r ../ros2/ $INSTALL_DIR/
#	sudo mkdir /etc/rc.local.d
#	chmod +x darwin-legacy.sh
#	sudo cp darwin-legacy.sh /etc/rc.local.d/
#	echo $INCLUDE_DIR
#	sudo rm $INCLUDE_DIR
#        sudo ln -s $INSTALL_DIR/include $INCLUDE_DIR

}


DarwinAchOff()
{
  echo 'Turning motor power off' 
  cd $INSTALL_DIR/$SYSTEM_ACH_DIR/$SYSTEM_ACH_DIR_OFF/
  ./$BIN_NAME_ACH_OFF
}

DarwinAchOn()
{ 
  echo 'Turning motor power on'
  cd $INSTALL_DIR/$SYSTEM_ACH_DIR/$SYSTEM_ACH_DIR_ON/
  ./$BIN_NAME_ACH_ON
}

DarwinAchPower()
{
  case "$1" in
        'on' )
                DarwinAchOn $@
        ;;
        'off' )
                DarwinAchOff $@
        ;;

        * )
                ShowUsage
                exit 1
  esac

}
DarwinAchServer()
{
  case "$1" in
        'on' )
                DarwinAchServerOn $@
        ;;
        'off' )
                DarwinAchServerOff $@
        ;;

        * )
                ShowUsage
                exit 1
  esac

}

DarwinAchServerOn()
{
  if ps -p $(pidof $BIN_NAME_ACH_SERVER) > /dev/null 2>&1
  then
      echo 'Darwin-Ach Server is already running'
  else
      echo 'Starting Darwin-Ach Server'
      cd $INSTALL_DIR/$SYSTEM_ACH_DIR/$SYSTEM_ACH_DIR_SERVER/
      ./$BIN_NAME_ACH_SERVER & 
      echo ''
  fi
}

DarwinAchServerOff()
{
  if ps -p $(pidof $BIN_NAME_ACH_SERVER) > /dev/null 2>&1
  then
      echo 'Stopping Darwin-Ach Server'
      kill -9 $(pidof $BIN_NAME_ACH_SERVER) > /dev/null 2>&1
  else
      echo 'Darwin-Ach Server is already stopped'
  fi
}

DarwinAchWalkingOn()
{
  if ps -p $(pidof $BIN_NAME_ACH_WALKING) > /dev/null 2>&1
  then
      echo 'Darwin-Ach Walking is already running'
  else
      echo 'Starting Darwin-Ach Walking'
      cd $INSTALL_DIR/$SYSTEM_ACH_DIR/$SYSTEM_ACH_DIR_WALKING/
      ./$BIN_NAME_ACH_WALKING & 
      echo ''
  fi
}

DarwinAchWalkingOff()
{
  if ps -p $(pidof $BIN_NAME_ACH_WALKING) > /dev/null 2>&1
  then
      echo 'Stopping Darwin-Ach Walking'
      kill -9 $(pidof $BIN_NAME_ACH_WALKING) > /dev/null 2>&1
  else
      echo 'Darwin-Ach Walking is already stopped'
  fi
}


DarwinAchWalking()
{
  case "$1" in
        'on' )
                DarwinAchWalkingOn $@
        ;;
        'off' )
                DarwinAchWalkingOff $@
        ;;

        * )
                ShowUsage
                exit 1
  esac

}





ShowUsage()
{
	echo 
	echo '================================================='
	echo '================================================='
	echo '============  Darwin Lofaro Legacy  ============='
	echo '============   for the Darwin OP    ============='
	echo '================================================='
	echo '=============== Daniel M. Lofaro ================'
	echo '=============== dan@danlofaro.com ==============='
	echo '================================================='
	echo '================================================='
	echo ''
	echo 'start         : Starts the Darwin Lofaro Legacy  '
	echo '                system and clock                 '
	echo ''
	echo 'stop          : Stops the Darwin Lofaro Legacy   '
	echo '                system and clock                 '
	echo ''
	echo 'status        : Checks to see if the system is   '
	echo '                running: Human readable          '
	echo ''
	echo 'status-id     : Checks to see if the system is   '
	echo '                running: 0 = running, 1 = stoped '
	echo ''
	echo 'low-latency   : sets serial to low latency mode  '
	echo ''
	echo 'start-daemon  : Starts the Darwin Lofaro Legacy  '
	echo '                system                           '
	echo ''
	echo 'start-clock   : Starts the Darwin Lofaro Legacy  '
	echo '                clock                            '
	echo ''
	echo 'stop-daemon   : Stops the Darwin Lofaro Legacy   '
	echo '                system                           '
	echo ''
	echo 'stop-clock    : Stops the Darwin Lofaro Legacy   '
	echo '                clock                            '
	echo ''
	echo 'ach-make      : Make ach channels                '
	echo ''
	echo 'ach-clear     : Clear and delete ach channels    '
	echo ''
	echo 'ach-reset     : Clear and delete ach channels    '
	echo '                then makes them again            '
	echo ''
	echo 'ach-remote    : Start the remote ach daemon      '
	echo ''
	echo 'ach-kill      : stops remote connections and     '
	echo '                removes all ach channels         '
	echo ''
        echo 'darwin-ach-server                                '
        echo '    on             : Starts Darwin-Ach Server    '
        echo '    off            : Stops Darwin-Ach Server     '
        echo ''
        echo 'darwin-ach-power                                 '
        echo '    on             : Turns on motors             '
        echo '    off            : Turns off motors            '
        echo ''
        echo 'darwin-ach-walking                               '
        echo '    on             : Starts walking process      '
        echo '    off            : Stops walking process       '
	echo ''
	echo 'darwin-ach-status                                '
	echo '    -n             : Running status of darwin-ach'
	echo '                     numerica 0=stopped 1=running'
	echo '    -h             : Human readable status of the'
	echo '                     Darwin-ach system           '
	echo '        server     : Server status               '
	echo '        client     : Client status               '
	echo '        walking    : Walking status              '
	echo '        remote     : Remote status               '
	echo ''
	echo
}


case "$1" in
	'status' )
		Status $@
	;;
	
	'status-id' )
		StatusId $@
	;;
	
        'low-latency' )
		LowLatency $@
	;;
	'start' )
		Start $@
	;;
	'start-daemon' )
		DarwinLegacyRos2Start $@
	;;
	'start-clock' )
		DarwinLegacyClockRos2Start $@
	;;
	'stop' )
		Stop $@
	;;
	'stop-daemon' )
		DarwinLegacyRos2Stop $@
	;;
	'stop-clock' )
		DarwinLegacyClockRos2Stop $@
	;;

	'ach-clear' )
		KillAchChannels $@
	;;	

	'ach-make' )
		MakeAch $@
	;;
	'ach-reset' )
		ResetAch $@
	;;

	'ach-remote' )
		AchRemote $DARWIN_IP
	;;

	'ach-kill' )
		KillAch
	;;

        'darwin-ach-server' )
                DarwinAchServer $2
        ;;

        'darwin-ach-power' )
                DarwinAchPower $2
        ;;

        'darwin-ach-walking' )
                DarwinAchWalking $2
        ;;

	'darwin-ach-status' )
		DarwinAchStatus $2 $3
	;;
	
	* )
		ShowUsage
		exit 1
esac

exit 0



