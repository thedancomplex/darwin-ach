#!/bin/bash

SCREEN_SERVER=darwin-ach-server
SCREEN_CLIENT=darwin-ach-client
DARWIN_SCREEN=darwin-ach-server-auto

Reset()
{
  case "$1" in
	'server' )
		darwin-ach stop server
		darwin-ach start server
	;;

  	'client' )
		darwin-ach stop client
		darwin-ach start client
	;;

	'all' )
		darwin-ach reset server
		darwin-ach reset client
	;;

	* )
		ShowUsage
	;;
  esac
}

Kill()
{
  case "$1" in
	'server' )
		darwin-lofaro darwin-ach-walking off
		darwin-lofaro darwin-ach-server off
		darwin-lofaro ach-clear
	;;

  	'client' )
		darwin-lofaro darwin-ach-walking off
		darwin-lofaro ach-kill
		darwin-lofaro ach-clear
	;;

	'all' )
		darwin-lofaro darwin-ach-walking off
		darwin-lofaro darwin-ach-server off
		darwin-lofaro ach-kill
		darwin-lofaro ach-clear
	;;

	* )
		ShowUsage
	;;
  esac
}

Ach()
{
  case "$1" in
	'make' )
		darwin-lofaro ach-make
	;;

  	'rm' )
		darwin-lofaro ach-clear
	;;
	
	'reset' )
		darwin-lofaro ach-reset
	;;

	* )
		ShowUsage
	;;
  esac
}

Ros()
{
  case "$1" in
	'rm' )
		darwin-lofaro ros-clear
	;;

	* )
		ShowUsage
	;;
  esac
}


Power()
{
  case "$1" in
	'on' )
		On $2
	;;

  	'off' )
		Off $2
	;;

	* )
		ShowUsage
	;;
  esac
}

Start()
{

  rm /tmp/darwin-ach-server.sh
  rm /tmp/darwin-ach-client.sh

  echo 'darwin-lofaro ach-reset'            >> /tmp/darwin-ach-server.sh
  echo 'darwin-lofaro darwin-ach-server on' >> /tmp/darwin-ach-server.sh
  echo 'darwin-lofaro ach-reset'            >> /tmp/darwin-ach-client.sh
  echo 'darwin-lofaro ach-remote'           >> /tmp/darwin-ach-client.sh

  chmod +x /tmp/darwin-ach-server.sh
  chmod +x /tmp/darwin-ach-client.sh

  case "$1" in
	'walking' )
	        echo '--- Starting Darwin-ach Walking ---'
		darwin-lofaro darwin-ach-walking on
	;;

	'server' )
	        echo '--- Starting Darwin-ach Server using Darwin Lofaro Legacy ---'
  		darwin-lofaro ach-reset
		darwin-lofaro darwin-ach-server on

#		/tmp/darwin-ach-server.sh
#		if ! screen -list | grep -q "$SCREEN_SERVER"; then
#                	echo '--- Starting Darwin-Ach Server using Darwin Lofaro Legacy ---'
#                	screen -d -m -S $SCREEN_SERVER /bin/bash -c /tmp/darwin-ach-server.sh
#			sleep 2
#			On
#        	else
#                	echo '--- Darwin-Ach Server usign Darwin Lofaro Legacy already running ---'
#        	fi
	;;

  	'client' )
	        echo '--- Starting Darwin-ach Client using Darwin Lofaro Legacy ---'
  		darwin-lofaro ach-reset
  		darwin-lofaro ach-remote

#		/tmp/darwin-ach-client.sh
#		if ! screen -list | grep -q "$SCREEN_CLIENT"; then
#                	echo '--- Starting Darwin-Ach Client using Darwin Lofaro Legacy ---'
#                	screen -d -m -S $SCREEN_CLIENT /bin/bash -c /tmp/darwin-ach-client.sh
#        	else
#                	echo '--- Darwin-Ach Client usign Darwin Lofaro Legacy already running ---'
#        	fi
#		darwin-lofaro ach-reset
#		darwin-lofaro ach-remote
	;;
	'client-ros' )
		darwin-ach reset client 
		darwin-lofaro ros-ach-bridge-reset
	;;

	'local' )
	        echo '--- Starting Darwin-ach Server (local) using Darwin Lofaro Legacy ---'
  		darwin-lofaro ach-reset
		darwin-lofaro darwin-ach-server on

#		/tmp/darwin-ach-server.sh
#		if ! screen -list | grep -q "$SCREEN_SERVER"; then
#                	echo '--- Starting Darwin-Ach Server using Darwin Lofaro Legacy ---'
#                	screen -d -m -S $SCREEN_SERVER /bin/bash -c $CMD_SERVER
#        	else
#                	echo '--- Darwin-Ach Server usign Darwin Lofaro Legacy already running ---'
#        	fi
	;;

	* )
		ShowUsage
	;;
  esac
}

Stop()
{

  case "$1" in
	'walking' )
	        echo '--- Stopping Darwin-ach Walking ---'
		darwin-lofaro darwin-ach-walking off
	;;

	'server' )
	        echo '--- Stopping Darwin-ach Server using Darwin Lofaro Legacy ---'
		darwin-lofaro darwin-ach-walking off
		Off $2
		darwin-lofaro darwin-ach-server off
		darwin-lofaro ach-clear
#        	screen -S "$SCREEN_SERVER" -X quit > /dev/null
#      		if ! screen -list | grep -q "$SCREEN_SERVER"; then
#                	echo '--- Darwin-ach Server using Darwin Lofaro Legacy Stopped ---'
#        	else
#                	echo '--- Darwin-ach Server using Darwin Lofaro Legacy Failed to Stop ---'
#        	fi
	;;

  	'client' )
	        echo '--- Stopping Darwin-ach Client using Darwin Lofaro Legacy ---'
		darwin-lofaro darwin-ach-walking off
		darwin-lofaro ach-kill
		darwin-lofaro ach-clear
#        	screen -S "$SCREEN_CLIENT" -X quit > /dev/null
#      		if ! screen -list | grep -q "$SCREEN_CLIENT"; then
#                	echo '--- Darwin-ach Client using Darwin Lofaro Legacy Stopped ---'
#        	else
#                	echo '--- Darwin-ach Client using Darwin Lofaro Legacy Failed to Stop ---'
#        	fi
	;;

	'local' )
		echo '--- Stopping Darwin-ach Server/Client (local) using Darwin Lofaro Legacy ---'
		darwin-lofaro darwin-ach-walking off
		Off $2
		darwin-lofaro darwin-ach-server off
		darwin-lofaro ach-clear
#        	screen -S "$SCREEN_SERVER" -X quit > /dev/null
#      		if ! screen -list | grep -q "$SCREEN_SERVER"; then
#			echo '--- Darwin-ach Server/Client (local) using Darwin Lofaro Legacy Stopped ---'
#        	else
#			echo '--- Darwin-ach Server/Client (local) using Darwin Lofaro Legacy Failed to Stop ---'
#        	fi
	;;
	* )
		ShowUsage
	;;
  esac
}

On()
{
  case "$1" in
	'no_wait' )
  		darwin-lofaro darwin-ach-power-no-wait on
	;;
	* )
  		darwin-lofaro darwin-ach-power on
	;;
  esac
}

Off()
{
  case "$1" in
	'no_wait' )
  		darwin-lofaro darwin-ach-power-no-wait off
	;;
	* )
  		darwin-lofaro darwin-ach-power off
	;;
  esac
}

DarwinAchStatus()
{
  THE_OUT=''
  case "$2" in
        'server' )
		THE_OUT=$(darwin-lofaro darwin-ach-status $1 $2)
        ;;

        'client' )
		THE_OUT=$(darwin-lofaro darwin-ach-status $1 $2)
        ;;

        'walking' )
		THE_OUT=$(darwin-lofaro darwin-ach-status $1 $2)
        ;;

        'remote' )
		THE_OUT=$(darwin-lofaro darwin-ach-status $1 $2)
        ;;

        * )
                ShowUsage
                exit 1
        ;;
  esac

  case "$1" in
        '-h' )
                echo $THE_OUT
        ;;
        '-n' )
                echo $THE_OUT
        ;;

        * )
                ShowUsage
                exit 1
        ;;
  esac
}

DarwinRosBridge()
{
  case "$1" in
        'start' )
		if ! screen -list | grep -q "$DARWIN_SCREEN"; then
			screen -S $DARWIN_SCREEN -d -m bash -c "darwin-lofaro ros-ach-bridge-monitor"
#			screen -S $DARWIN_SCREEN -d -m bash -c "/etc/darwin-legacy/darwin-lofaro ros-ach-bridge-monitor"
		else
			echo 'Darwin-Ach to Ros System Already Started'
		fi
        ;;
        'stop' )
                screen -S $DARWIN_SCREEN -p 0 -X quit
		echo 'Darwin-Ach to Ros System Stopped'
        ;;

        * )
                ShowUsage
                exit 1
        ;;
  esac
}



Darwin()
{
  case "$1" in
        'start' )
		if ! screen -list | grep -q "$DARWIN_SCREEN"; then
			screen -S $DARWIN_SCREEN -d -m bash -c "/etc/darwin-legacy/darwin-ach-auto-run.sh"
		else
			echo 'Darwin-Ach System Already Started'
		fi
        ;;
        'stop' )
                screen -S $DARWIN_SCREEN -p 0 -X quit
		echo 'Darwin-Ach System Stopped'
        ;;

        * )
                ShowUsage
                exit 1
        ;;
  esac

}


ShowUsage()
{
        echo 
        echo '================================================='
        echo '================================================='
        echo '======  Darwin-Ach for Darin Lofaro Legacy ======'
        echo '============   for the Darwin OP    ============='
        echo '================================================='
        echo '=============== Daniel M. Lofaro ================'
        echo '=============== dan@danlofaro.com ==============='
        echo '================================================='
        echo '================================================='
        echo ''
        echo 'start                                            '
        echo '-  server     : Starts the server (darwin) side  '
	echo '                and turns power on               '
	echo '-  client     : Starts the client (external side)'
	echo '-  client-ros : Starts the client (external side)'
	echo '                with the ros2 bridge enabled     '
	echo '-  local      : Starts server and client on the  '
	echo '                same machine and turns poer on   '
	echo '-  walking    : Starts the waking process        '
        echo ''
        echo 'stop                                             '
  	echo ' [arg 0] [arg 1]                                 '
        echo '- server      : Stops the server (darwin) side   '
	echo '                and turns power off              '
	echo '- client      : Stops the client (external side) '
	echo '- local       : Stops server and client on the   '
	echo '                same machine and turns power off '
	echo '- walking     : Stops the walking process        '
	echo '-     no_wait : Will not block when waiting for  '
	echo '                a response                       '
	echo ''
	echo 'power                                            '
  	echo ' [arg 0] [arg 1]                                 '
        echo '-  on           : Turns power on                 '
	echo '-  off          : Turns power off                '
	echo '-       no_wait : Will not block when waiting for'
	echo '                  a response                     '
	echo ''
	echo 'kill             	                               '
	echo '-  server     : Kills server and ach channels    '
	echo '-  client     : Kills client, ach channels, and  '
	echo '                achd remote connection           '
	echo '-  all        : Kills the client and server      '
        echo ''
	echo 'reset             	                       '
	echo '-  server     : Stops and starts the server      '
	echo '-  client     : Stops and start the client       '
	echo '-  all        : Stops and starts the client and  '
	echo '                server                           '
        echo ''
        echo 'status                                           '
	echo ' [arg 0] [arg 1]                                 '
        echo '    -n             : Running status of darwin-ach'
        echo '                     numerica 0=stopped 1=running'
        echo '    -h             : Human readable status of the'
        echo '                     Darwin-ach system           '
        echo '          server   : Server status               '
        echo '          client   : Client status               '
        echo '          walking  : Walking status              '
        echo '          remote   : Remote status               '
	echo 'ach                                              '
	echo '   make       : make ach channels                '
	echo '   rm         : remove ach channels              '
	echo '   reset      : destroy the remake ach channels  '
	echo ''
	echo 'ros                                              '
	echo '   rm         : Clears shared memory for ros2    '
	echo ''
	echo 'darwin                                           '
	echo '   start      : Starts the darwin side of the    '
	echo '                system in the background         '
	echo '   stop       : Stops the darwin side of the     '
	echo '                background system                '
	echo ''
	echo 'darwin-ros                                       '
	echo '   start      : Starts the darwin to ros2 system '
	echo '                in the background                '
	echo '   stop       : Stops the darwin to ros2         '
	echo '                background system                '
	echo ''
}


case "$1" in 
	'start' )
		Start $2 $3
	;;

	'stop' )
		Stop $2 $3
	;;

	'power' )
		Power $2 $3
	;;

	'kill' )
		Kill $2
	;;	

	'reset' )
		Reset $2
	;;	
	
	'status' )
		DarwinAchStatus $2 $3
	;;

	'ach' )
		Ach $2
	;;

	'darwin' )
		Darwin $2
	;;

	'darwin-ros' )
		DarwinRosBridge $2
	;;

	'ros' )
		Ros $2
	;;

	* )
		ShowUsage
		exit 1
	;;	
esac	
exit 0
